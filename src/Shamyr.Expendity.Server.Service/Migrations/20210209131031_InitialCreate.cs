using System;
using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Shamyr.Expendity.Server.Service.Migrations
{
  [SuppressMessage("Readability", "RCS1021", Justification = "<auto-generated />")]
  public partial class InitialCreate: Migration
  {
    protected override void Up(MigrationBuilder migrationBuilder)
    {
      migrationBuilder.CreateTable(
          name: "Projects",
          columns: table => new
          {
            id = table.Column<int>(type: "int", nullable: false)
                  .Annotation("SqlServer:Identity", "1, 1"),
            name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
            description = table.Column<string>(type: "nvarchar(1000)", maxLength: 1000, nullable: true),
            deleted = table.Column<bool>(type: "bit", nullable: false)
          },
          constraints: table =>
          {
            table.PrimaryKey("pk_projects", x => x.id);
          });

      migrationBuilder.CreateTable(
          name: "Users",
          columns: table => new
          {
            id = table.Column<int>(type: "int", nullable: false)
                  .Annotation("SqlServer:Identity", "1, 1"),
            subject_id = table.Column<string>(type: "nvarchar(450)", nullable: false),
            email = table.Column<string>(type: "nvarchar(max)", nullable: false),
            username = table.Column<string>(type: "nvarchar(max)", nullable: true),
            given_name = table.Column<string>(type: "nvarchar(max)", nullable: true),
            family_name = table.Column<string>(type: "nvarchar(max)", nullable: true)
          },
          constraints: table =>
          {
            table.PrimaryKey("pk_users", x => x.id);
          });

      migrationBuilder.CreateTable(
          name: "ExpenseTypes",
          columns: table => new
          {
            id = table.Column<int>(type: "int", nullable: false)
                  .Annotation("SqlServer:Identity", "1, 1"),
            name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
            description = table.Column<string>(type: "nvarchar(1000)", maxLength: 1000, nullable: true),
            project_id = table.Column<int>(type: "int", nullable: false)
          },
          constraints: table =>
          {
            table.PrimaryKey("pk_expense_types", x => x.id);
            table.ForeignKey(
                      name: "fk_expense_types_projects_project_id",
                      column: x => x.project_id,
                      principalTable: "Projects",
                      principalColumn: "id",
                      onDelete: ReferentialAction.Cascade);
          });

      migrationBuilder.CreateTable(
          name: "ProjectPermissions",
          columns: table => new
          {
            id = table.Column<int>(type: "int", nullable: false)
                  .Annotation("SqlServer:Identity", "1, 1"),
            user_id = table.Column<int>(type: "int", nullable: false),
            project_id = table.Column<int>(type: "int", nullable: false),
            type = table.Column<int>(type: "int", nullable: false)
          },
          constraints: table =>
          {
            table.PrimaryKey("pk_project_permissions", x => x.id);
            table.ForeignKey(
                      name: "fk_project_permissions_projects_project_id",
                      column: x => x.project_id,
                      principalTable: "Projects",
                      principalColumn: "id",
                      onDelete: ReferentialAction.Cascade);
            table.ForeignKey(
                      name: "fk_project_permissions_users_user_id",
                      column: x => x.user_id,
                      principalTable: "Users",
                      principalColumn: "id",
                      onDelete: ReferentialAction.Cascade);
          });

      migrationBuilder.CreateTable(
          name: "Expenses",
          columns: table => new
          {
            id = table.Column<int>(type: "int", nullable: false)
                  .Annotation("SqlServer:Identity", "1, 1"),
            name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
            value = table.Column<double>(type: "float", nullable: false),
            description = table.Column<string>(type: "nvarchar(1000)", maxLength: 1000, nullable: true),
            added_utc = table.Column<DateTime>(type: "datetime2", nullable: false),
            type_id = table.Column<int>(type: "int", nullable: true),
            project_id = table.Column<int>(type: "int", nullable: false),
            creator_user_id = table.Column<int>(type: "int", nullable: false),
            last_updater_user_id = table.Column<int>(type: "int", nullable: true)
          },
          constraints: table =>
          {
            table.PrimaryKey("pk_expenses", x => x.id);
            table.ForeignKey(
                      name: "fk_expenses_expense_types_type_id",
                      column: x => x.type_id,
                      principalTable: "ExpenseTypes",
                      principalColumn: "id",
                      onDelete: ReferentialAction.SetNull);
            table.ForeignKey(
                      name: "fk_expenses_projects_project_id",
                      column: x => x.project_id,
                      principalTable: "Projects",
                      principalColumn: "id",
                      onDelete: ReferentialAction.Restrict);
            table.ForeignKey(
                      name: "fk_expenses_users_creator_user_id",
                      column: x => x.creator_user_id,
                      principalTable: "Users",
                      principalColumn: "id",
                      onDelete: ReferentialAction.Restrict);
            table.ForeignKey(
                      name: "fk_expenses_users_last_updater_user_id",
                      column: x => x.last_updater_user_id,
                      principalTable: "Users",
                      principalColumn: "id",
                      onDelete: ReferentialAction.Restrict);
          });

      migrationBuilder.CreateIndex(
          name: "ix_expenses_added_utc",
          table: "Expenses",
          column: "added_utc");

      migrationBuilder.CreateIndex(
          name: "ix_expenses_creator_user_id",
          table: "Expenses",
          column: "creator_user_id");

      migrationBuilder.CreateIndex(
          name: "ix_expenses_last_updater_user_id",
          table: "Expenses",
          column: "last_updater_user_id");

      migrationBuilder.CreateIndex(
          name: "ix_expenses_project_id",
          table: "Expenses",
          column: "project_id");

      migrationBuilder.CreateIndex(
          name: "ix_expenses_type_id",
          table: "Expenses",
          column: "type_id");

      migrationBuilder.CreateIndex(
          name: "ix_expense_types_project_id",
          table: "ExpenseTypes",
          column: "project_id");

      migrationBuilder.CreateIndex(
          name: "ix_project_permissions_project_id",
          table: "ProjectPermissions",
          column: "project_id");

      migrationBuilder.CreateIndex(
          name: "ix_project_permissions_user_id",
          table: "ProjectPermissions",
          column: "user_id");

      migrationBuilder.CreateIndex(
          name: "ix_project_permissions_user_id_project_id",
          table: "ProjectPermissions",
          columns: new[] { "user_id", "project_id" },
          unique: true);

      migrationBuilder.CreateIndex(
          name: "ix_users_subject_id",
          table: "Users",
          column: "subject_id",
          unique: true);
    }

    protected override void Down(MigrationBuilder migrationBuilder)
    {
      migrationBuilder.DropTable(
          name: "Expenses");

      migrationBuilder.DropTable(
          name: "ProjectPermissions");

      migrationBuilder.DropTable(
          name: "ExpenseTypes");

      migrationBuilder.DropTable(
          name: "Users");

      migrationBuilder.DropTable(
          name: "Projects");
    }
  }
}
