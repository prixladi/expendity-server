// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shamyr.Expendity.Server.Service.Database;

namespace Shamyr.Expendity.Server.Service.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Shamyr.Expendity.Server.Entities.ExpenseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AddedUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("added_utc");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.Property<double>("Value")
                        .HasColumnType("float")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_expenses");

                    b.HasIndex("AddedUtc")
                        .HasDatabaseName("ix_expenses_added_utc");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_expenses_type_id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Shamyr.Expendity.Server.Entities.ExpenseTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_expense_types");

                    b.ToTable("ExpenseTypes");
                });

            modelBuilder.Entity("Shamyr.Expendity.Server.Entities.ExpenseEntity", b =>
                {
                    b.HasOne("Shamyr.Expendity.Server.Entities.ExpenseTypeEntity", "Type")
                        .WithMany("Expenses")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("fk_expenses_expense_types_type_id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Shamyr.Expendity.Server.Entities.ExpenseTypeEntity", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
